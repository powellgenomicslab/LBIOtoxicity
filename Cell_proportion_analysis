cell proportion analysis between timepoints 

library(Seurat)
library(dplyr)
library(patchwork)
library(ggplot2)
library(SeuratDisk)
library(magrittr)
library(jsonlite)
library(data.table)
library(devtools)
library(Azimuth)
library(ComplexHeatmap)
library(DESeq2)
library(pheatmap)
library(viridis)
library(EnhancedVolcano)
library(dittoSeq)
library(presto)
library(tictoc)

my_dir <- "/directflow/SCCGGroupShare/projects/jenli3/LBTOX"
setwd(my_dir)

#read RDS
LBtox <- readRDS("/directflow/SCCGGroupShare/projects/jenli3/LBTOX/SeuratObjects/LBTox_SNP_Metadata_Updatedv2.RDS")
LBtox

#Summary of cell clusters and numbers - baseline
colnames(LBtox[[]])

#subset LBtox to remove LB142
LBtox.no142 <- subset(LBtox, subset = MajoritySinglet_Individual_Assignment != "LB142")

#Metadata table
LBtox.metadatasummary <- LBtox.no142@meta.data %>% 
group_by(MajoritySinglet_Individual_Assignment, predicted.celltype.l2, Population, Timepoint) %>%
summarise(counts=n()) %>%
group_by(MajoritySinglet_Individual_Assignment, Population, Timepoint) %>%
mutate(Percentage=counts/sum(counts)*100)
head(LBtox.metadatasummary)

#save metadata summary as CSV
write.csv(LBtox.metadatasummary, file = "/directflow/SCCGGroupShare/projects/jenli3/LBTOX/SeuratObjects/LBtox_metadata_summary.csv", row.names = FALSE)

#Repeat Graph for COHORT Cells Only
cohort.metadatasummary <- Cohort.no142@meta.data %>% 
group_by(MajoritySinglet_Individual_Assignment, predicted.celltype.l2, Population, Timepoint) %>%
summarise(counts=n()) %>%
group_by(MajoritySinglet_Individual_Assignment, Population, Timepoint) %>%
mutate(Percentage=counts/sum(counts)*100)
head(cohort.metadatasummary)

#Metadata table for CONTROL cells
control.metadatasummary <- Control.no142@meta.data %>% 
group_by(MajoritySinglet_Individual_Assignment, predicted.celltype.l2, Population, Timepoint) %>%
summarise(counts=n()) %>%
group_by(MajoritySinglet_Individual_Assignment, Population, Timepoint) %>%
mutate(Percentage=counts/sum(counts)*100)
head(control.metadatasummary)


# Define a colour palette for each cohort
Timepoint.palette <- c("Baseline" = "#F58800",
                    "C2" = "#2c7e8c", "C3" = )

Timepoint.palette <- c("Baseline" = "#999999", "C2" = "#E69F00", "C3" = "#56B4E9")
​
# Plot for CONTROL ONLY
control.plot.list <- lapply(unique(control.metadatasummary$predicted.celltype.l2), function(i){
    p2 <- control.metadatasummary %>%
        filter(predicted.celltype.l2  ==  i) %>%
        ggplot(
            mapping = aes(
                x = Timepoint,
                y = Percentage,
                color = as.factor(Timepoint)
            ),
            fill = as.factor(Timepoint)
        ) +
        geom_boxplot(
            aes(color = as.factor(Timepoint)),
            width = 0.45,
            position = position_dodge(0.8),
            outlier.shape = NA,
            coef = 0
        ) +
        geom_quasirandom(dodge.width = .8,
                         width = 0.04,
                         alpha = 0.75) +
        theme_classic() +
        theme(legend.title = element_blank()) +
        scale_colour_manual(values = Timepoint.palette,
                            name = "") +
        theme(
              axis.text.x = element_blank(),
            axis.ticks.x = element_blank(),
            ) +
        xlab(i) +
        theme(axis.title.x = element_text(size=7)) +
        ylab("Percentage of cells (%)") +
        ylim(c(min(control.metadatasummary$Percentage),
          1.1*max(control.metadatasummary$Percentage)))
        
        # Apply the Wilcoxon Rank Sum Test between tumour pairs
        sigFunc = function(x){
            if(x < 0.001){"***"} 
            else if(x < 0.01){"**"}
            else if(x < 0.05){"*"}
            else{NA}}
    
        p2 <- p2 + geom_signif(
            comparisons = list(c("Baseline", "C2", "C3")),
            test = "wilcox.test",
            map_signif_level  =  sigFunc,
            colour  =  "black",
            y_position = 30
        )
    
        # Remove y axis except for the first plot
    if (i != "B intermediate") {
        p2 <- p2 + theme(
            axis.title.y = element_blank(),
            axis.text.y = element_blank(),
            axis.ticks.y = element_blank(),
            axis.line.y = element_blank()
        )
    }
    
    return(p2)
})
​
ggsave(filename = "Cell Proportion Significance Timepoint Control 3.pdf",
       plot = wrap_plots(control.plot.list, ncol = 4, guides="collect"),
       device = "pdf", width = 28, height = 45, units = "cm")


#calculate p value
result <- sapply(unique(control.metadatasummary$predicted.celltype.l2), function(i){
    x <- filter(control.metadatasummary, predicted.celltype.l2==i)
    group1 <- x$Percentage[x$Timepoint=="Baseline"]
    group2 <- x$Percentage[x$Timepoint=="C2"]
    result <- wilcox.test(group1, group2)
    return(result$p.value)
})
result

# Define a colour palette for each cohort for COHORT ONLY
Timepoint.palette <- c("Baseline" = "#F58800",
                    "C2" = "#2c7e8c")
​
# Plot
cohort.plot.list <- lapply(unique(cohort.metadatasummary$predicted.celltype.l2), function(i){
    p3 <- cohort.metadatasummary %>%
        filter(predicted.celltype.l2  ==  i) %>%
        ggplot(
            mapping = aes(
                x = Timepoint,
                y = Percentage,
                color = as.factor(Timepoint)
            ),
            fill = as.factor(Timepoint)
        ) +
        geom_boxplot(
            aes(color = as.factor(Timepoint)),
            width = 0.45,
            position = position_dodge(0.8),
            outlier.shape = NA,
            coef = 0
        ) +
        geom_quasirandom(dodge.width = .8,
                         width = 0.04,
                         alpha = 0.75) +
        theme_classic() +
        theme(legend.title = element_blank()) +
        scale_colour_manual(values = Timepoint.palette,
                            name = "") +
        theme(
              axis.text.x = element_blank(),
            axis.ticks.x = element_blank(),
            ) +
        xlab(i) +
        theme(axis.title.x = element_text(size=7)) +
        ylab("Percentage of cells (%)") +
        ylim(c(min(cohort.metadatasummary$Percentage),
          1.1*max(cohort.metadatasummary$Percentage)))
        
        # Apply the Wilcoxon Rank Sum Test between tumour pairs
        sigFunc = function(x){
            if(x < 0.001){"***"} 
            else if(x < 0.01){"**"}
            else if(x < 0.05){"*"}
            else{NA}}
    
        p3 <- p3 + geom_signif(
            comparisons = list(c("Baseline", "C2", "C3")),
            test = "wilcox.test",
            map_signif_level  =  sigFunc,
            colour  =  "black",
            y_position = 30
        )
    
    
    return(p3)
})
​
ggsave(filename = "Cell Proportion Significance Timepoint Cohort FINAL 3.pdf",
       plot = wrap_plots(cohort.plot.list, ncol = 4, guides="collect"),
       device = "pdf", width = 28, height = 45, units = "cm")


#calculate p value
result.cohort <- sapply(unique(cohort.metadatasummary$predicted.celltype.l2), function(i){
    x <- filter(cohort.metadatasummary, predicted.celltype.l2==i)
    group1 <- x$Percentage[x$Timepoint=="Baseline"]
    group2 <- x$Percentage[x$Timepoint=="C2"]
    result.cohort <- wilcox.test(group1, group2)
    return(result.cohort$p.value)
})

result.cohort

#evaluate difference between B intermediate cell proportions at baseline between cohort and control
